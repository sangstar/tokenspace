# Makefile for python interface for package svd.
# File is generated by gopy. Do not edit.
# gopy build -output=./svd ./gosrc/svd/

GOCMD=go
GOBUILD=$(GOCMD) build -mod=mod
GOIMPORTS=goimports
PYTHON=/Users/sangersteel/GolandProjects/wordspace/wordspace_venv/bin/python
LIBEXT=.so

# get the CC and flags used to build python:
GCC = $(shell $(GOCMD) env CC)
CFLAGS = "-I/Users/sangersteel/.pyenv/versions/3.9.7/include/python3.9"
LDFLAGS = "-L/Users/sangersteel/.pyenv/versions/3.9.7/lib" "-lpython3.9" -ldl -L/Users/sangersteel/.pyenv/versions/3.9.7/lib -Wl,-rpath,/Users/sangersteel/.pyenv/versions/3.9.7/lib -L/opt/homebrew/lib -Wl,-rpath,/opt/homebrew/lib  -framework CoreFoundation 

all: gen build

gen:
	gopy gen -no-make ./gosrc/svd/

build:
	# build target builds the generated files -- this is what gopy build does..
	# this will otherwise be built during go build and may be out of date
	- rm svd.c
	# goimports is needed to ensure that the imports list is valid
	$(GOIMPORTS) -w svd.go
	# generate svd_go$(LIBEXT) from svd.go -- the cgo wrappers to go functions
	$(GOBUILD) -buildmode=c-shared -o svd_go$(LIBEXT) svd.go
	# use pybindgen to build the svd.c file which are the CPython wrappers to cgo wrappers..
	# note: pip install pybindgen to get pybindgen if this fails
	$(PYTHON) build.py
	# build the _svd$(LIBEXT) library that contains the cgo and CPython wrappers
	# generated svd.py python wrapper imports this c-code package
	
	$(GCC) svd.c -dynamiclib svd_go$(LIBEXT) -o _svd$(LIBEXT) $(CFLAGS) $(LDFLAGS) -fPIC --shared -w
	


